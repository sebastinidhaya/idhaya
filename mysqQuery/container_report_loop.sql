DELIMITER $$

USE `transport`$$

DROP PROCEDURE IF EXISTS `SUM_OF_CONTAINER_ON_LOAD_TYPE`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `SUM_OF_CONTAINER_ON_LOAD_TYPE`(IN F_DATE DATETIME, IN T_DATE DATETIME)
BEGIN
	DECLARE n INT DEFAULT 0;
	DECLARE i INT DEFAULT 0;
	DECLARE TEMP_TYPES_OF_LOAD VARCHAR(15);
	DECLARE TEMP_FOURTYFEET INT DEFAULT 0;
	DECLARE TEMP_TWENTYFEET INT DEFAULT 0;
	DECLARE TEMP_TOTAL_TRIP_CHARGE INT DEFAULT 0;
	DECLARE TEMP_OTHER_TRIP_CHARGE INT DEFAULT 0;
	
	DROP TEMPORARY TABLE IF EXISTS LOAD_TYPES;
	DROP TEMPORARY TABLE IF EXISTS LOADING_COST; 
	
	CREATE TEMPORARY TABLE LOADING_COST(id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,LOAD_TYPE VARCHAR(15),FOURTY_FEET INT NULL, TWENTY_FEET INT NULL, TOTAL_AMOUNT INT NULL); 
	CREATE TEMPORARY TABLE LOAD_TYPES(id INT NOT NULL AUTO_INCREMENT PRIMARY KEY) SELECT DISTINCT B.LOAD_TYPE FROM TRACK_VEHICLE AS A INNER JOIN TRACK_CONTAINER AS B ON A.TRIP_ID=B.TRACK_ID
	WHERE A.UNLOAD_DATE BETWEEN F_DATE AND T_DATE;  
	SELECT COUNT(*) FROM LOAD_TYPES INTO n;
	SET i=1;
	
	WHILE i<=n DO
	SELECT LOAD_TYPE INTO TEMP_TYPES_OF_LOAD FROM LOAD_TYPES WHERE id=i;
	DROP TEMPORARY TABLE IF EXISTS PNR_COST; 
	CREATE TEMPORARY TABLE PNR_COST(SELECT  DISTINCT A.TRIP_ID FROM TRACK_VEHICLE AS A INNER JOIN TRACK_CONTAINER AS B ON A.TRIP_ID=B.TRACK_ID
	WHERE B.LOAD_TYPE = TEMP_TYPES_OF_LOAD AND A.UNLOAD_DATE BETWEEN F_DATE AND T_DATE);
	
	SELECT COUNT(B.TRACK_ID) INTO TEMP_FOURTYFEET FROM TRACK_VEHICLE AS A INNER JOIN TRACK_CONTAINER AS B ON A.TRIP_ID=B.TRACK_ID
	WHERE A.UNLOAD_DATE BETWEEN F_DATE AND T_DATE AND B.LOAD_TYPE = TEMP_TYPES_OF_LOAD AND B.SIZE=40;
	SELECT COUNT(B.TRACK_ID) INTO TEMP_TWENTYFEET FROM TRACK_VEHICLE AS A INNER JOIN TRACK_CONTAINER AS B ON A.TRIP_ID=B.TRACK_ID
	WHERE A.UNLOAD_DATE BETWEEN F_DATE AND T_DATE AND B.LOAD_TYPE = TEMP_TYPES_OF_LOAD AND B.SIZE=20;	
	SELECT SUM(a.TOTAL_TRIP_CHARGE) INTO TEMP_TOTAL_TRIP_CHARGE FROM track_vehicle AS a INNER JOIN pnr_cost AS b ON b.trip_id = a.trip_id;	
	
	INSERT INTO LOADING_COST(LOAD_TYPE,FOURTY_FEET, TWENTY_FEET, TOTAL_AMOUNT) VALUES (TEMP_TYPES_OF_LOAD,TEMP_FOURTYFEET,TEMP_TWENTYFEET,TEMP_TOTAL_TRIP_CHARGE);
	SET i = i + 1;
	END WHILE;
	
	
	SELECT SUM(D.TOTAL_TRIP_CHARGE) INTO TEMP_OTHER_TRIP_CHARGE FROM TRACK_VEHICLE D
	WHERE NOT EXISTS(SELECT TRIP_ID FROM TRACK_CONTAINER C WHERE D.TRIP_ID = C.TRACK_ID) AND UNLOAD_DATE BETWEEN F_DATE AND T_DATE;
	INSERT INTO LOADING_COST(LOAD_TYPE,FOURTY_FEET, TWENTY_FEET, TOTAL_AMOUNT) VALUES ('OTHERS',0,0,TEMP_OTHER_TRIP_CHARGE);

	DROP TEMPORARY TABLE IF EXISTS PNR_COST;
	DROP TEMPORARY TABLE IF EXISTS LOAD_TYPES; 
	SELECT * FROM LOADING_COST;

	END$$

DELIMITER ;